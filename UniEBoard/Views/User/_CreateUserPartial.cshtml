@model UniEBoard.Service.Models.UserViewModel
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { @class = "custom" }))
    {
        if (!ViewData.ModelState.IsValid)
        {
            <div class="validation-summary-errors">
                <ul class="no-bullet">
                    @foreach (ModelState modelState in ViewData.ModelState.Values)
                    {
                        foreach (ModelError modelError in modelState.Errors)
                        {
                            <li>@modelError.ErrorMessage</li>
                        }
                    }

                </ul>
            </div>
        }
        <div id="AddNew" class="hide panel">
            <div class="row">
                <div class="large-6 columns">
                    <label for="FirstName">First Name</label>
                    @Html.TextBoxFor(m => m.FirstName, new { required = "required", placeholder = "Enter First Name..." })
                </div>
                <div class="large-6 columns">
                    <label for="LastName">Last Name</label>
                    @Html.TextBoxFor(m => m.LastName, new { required = "required", placeholder = "Enter Last Name..." })
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <label for="Mobile">Mobile</label>
                    <input name="Mobile" type="text" placeholder="Mobile" required />
                </div>
                <div class="large-3 columns">
                    <label for="Postcode">Postcode/Zip</label>
                    <input name="Postcode" type="text" placeholder="Postcode/Zip" required />
                </div>
                <div class="roleid large-3 columns">
                    <label for="Role">Role</label>
                    @*@Html.DropDownListFor(model => model._roleViewModel, ViewBag.RoleList as SelectList)*@
                    @*@Html.DropDownListFor(model => model._roleViewModel, ViewBag.RoleList as SelectList,"Select Role", new { @onchange = "CallChangefunc(this.value)" })*@
                    <select class="chosen-select" id="ddlPassport" name="@Html.NameFor(m => m._roleViewModel)">                        
                        <option value="">Select Role...</option>
                        <option value="Teacher">Teacher</option>
                        <option value="Student">Student</option>
                        <option value="Admin">Admin</option>
                    </select>
                </div>            
            </div>

            <div class="row" id="dept">
                <div class="large-6 columns">
                    <select class="chosen-select" name="@Html.NameFor(m => m.Department)">
                        <option value="">Select Department...</option>
                        <option value="1">Information Technology</option>
                        <option value="2">Business</option>
                        <option value="3">Default</option>
                    </select>
                </div>
                <div class="large-6 columns">
                    <select class="chosen-select" name="@Html.NameFor(m => m.Position)">
                        <option value="">Select Position...</option>
                        <option value="1">Not Specified</option>
                        <option value="2">Lecturer</option>
                        <option value="3">Professor</option>
                        <option value="4">Administrator</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <label for="Email">Email</label>
                    @Html.TextBoxFor(m => m.Email, new { required = "required", placeholder = "Enter Email Address..." })
                </div>
                <div class="large-6 columns">
                    <label for="New-Course">Course</label>
                            @*@Html.DropDownListFor(p=>p.CourseId, ViewBag.CourseList as SelectList,"Select Course...")*@             
                            @*@Html.DropDownListFor(model => model.selectedcourse, ViewBag.CourseList as SelectList, "Select Course...")*@
                            @Html.DropDownListFor(model=>model.CourseId, (IEnumerable<SelectListItem>)ViewData["Courses"], new {  })
</div>
            </div>
            <div class="row">
                <div class="large-12 medium-12 columns">
                    <input type="submit" value="Create User" class="right button radius tiny" />
                </div>
            </div>
        </div>
    }
}
